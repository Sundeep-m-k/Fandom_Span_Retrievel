Tweer's number
is a massive number which is represented by the Greek letter upsilon.
Representation
[
]
υ
{\displaystyle \upsilon}
How it's calculated
[
]
It all begins with nesting functions.
First we define a function
f
0
{\displaystyle f_0}
being an index into a nesting function (in this case the addition, multiplication, exponentiation chain):
f
0
(
0
)
=
0
+
0
=
0
{\displaystyle f_0(0) = 0+0 = 0}
f
0
(
1
)
=
1
×
1
=
1
{\displaystyle f_0(1) = 1 \times 1 = 1}
f
0
(
2
)
=
2
2
=
4
{\displaystyle f_0(2) = 2^2 = 4}
and so on.
Then define f
1
as a nesting function of
f
0
{\displaystyle f_0}
:
f
1
(
1
)
=
f
0
(
1
)
=
1
×
1
=
1
{\displaystyle f_1(1) = f_0(1) = 1 \times 1 = 1}
f
1
(
2
)
=
f
0
(
f
0
(
2
)
)
=
f
0
(
2
2
)
=
f
0
(
4
)
=
4
↑
↑
↑
4
=
4
↑
↑
4
↑
↑
4
↑
↑
4
=
4
↑
↑
4
↑
↑
4
4
4
4
=
4
↑
↑
4
↑
↑
10
10
154
.
.
.
{\displaystyle f_1(2) = f_0(f_0(2)) = f_0(2^2) = f_0(4) = 4 \uparrow\uparrow\uparrow 4 = 4 \uparrow\uparrow4\uparrow\uparrow4\uparrow\uparrow 4 = 4 \uparrow\uparrow4\uparrow\uparrow 4^{4^{4^{4}}} = 4 \uparrow\uparrow4\uparrow\uparrow 10^{10^{154}}...}
Now you have a function that can output stupid big numbers with tiny inputs.
But we're not done.
We can define
f
2
{\displaystyle f_2}
as a nesting function of
f
1
{\displaystyle f_1}
and
f
3
{\displaystyle f_3}
as a nesting function of
f
2
{\displaystyle f_2}
as do this over and over again up to infinity.
And we're still not done.
We can define
g
0
{\displaystyle g_0}
as an index into the f functions:
g
0
(
1
)
=
f
1
(
1
)
{\displaystyle g_0(1) = f_1(1)}
g
0
(
2
)
=
f
2
(
2
)
{\displaystyle g_0(2) = f_2(2)}
Now we can do the same thing with the g functions as we did with the f functions.
And that's not all.
We can create another series h that does exactly the same thing to the g functions. And we can repeat this an infinite amount of times.
And we can index into the actual tiers of this sequence.
Let's stop here (we could keep nesting and indexing but for simplicity's sake let's stop here). Let's define as an index into this system:
T
W
(
1
)
=
f
0
(
1
)
{\displaystyle TW(1) = f_0(1)}
T
W
(
2
)
=
g
0
(
2
)
{\displaystyle TW(2) = g_0(2)}
T
W
(
3
)
=
h
0
(
3
)
{\displaystyle TW(3) = h_0(3)}
Now we can finally calculate Tweers (Massive) Number
T
W
(
Graham's number
)
{\displaystyle TW(\text{Graham's number})}
Tweer's function can be approximated to
f
ω
2
(
n
)
{\displaystyle f_{\omega^2}(n)}
in the Fast Growing Hierarchy , and Tweer's number is
f
ω
2
(
f
ω
+
1
(
64
)
)
{\displaystyle f_{\omega^2}(f_{\omega+1}(64))}
in the Fast Growing Hierarchy (written as
{
G
,
G
,
G
,
G
}
{\displaystyle \{G,G,G,G\}}
in BEAF, where G is Graham's Number)